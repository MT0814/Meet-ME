[{"/Users/MT/Desktop/main/insta/client/src/index.js":"1","/Users/MT/Desktop/main/insta/client/src/reportWebVitals.js":"2","/Users/MT/Desktop/main/insta/client/src/App.js":"3","/Users/MT/Desktop/main/insta/client/src/pages/SingleThought.js":"4","/Users/MT/Desktop/main/insta/client/src/pages/Profile.js":"5","/Users/MT/Desktop/main/insta/client/src/pages/Home.js":"6","/Users/MT/Desktop/main/insta/client/src/pages/Signup.js":"7","/Users/MT/Desktop/main/insta/client/src/pages/Login.js":"8","/Users/MT/Desktop/main/insta/client/src/components/Header/index.js":"9","/Users/MT/Desktop/main/insta/client/src/components/Footer/index.js":"10","/Users/MT/Desktop/main/insta/client/src/utils/auth.js":"11","/Users/MT/Desktop/main/insta/client/src/utils/mutations.js":"12","/Users/MT/Desktop/main/insta/client/src/utils/queries.js":"13","/Users/MT/Desktop/main/insta/client/src/components/CommentList/index.js":"14","/Users/MT/Desktop/main/insta/client/src/components/CommentForm/index.js":"15","/Users/MT/Desktop/main/insta/client/src/components/ThoughtList/index.js":"16","/Users/MT/Desktop/main/insta/client/src/components/ThoughtForm/index.js":"17","/Users/MT/Desktop/main/insta/client/src/components/Card/index.js":"18"},{"size":543,"mtime":1642838409656,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1642744670044,"results":"21","hashOfConfig":"20"},{"size":2368,"mtime":1642826392025,"results":"22","hashOfConfig":"20"},{"size":1562,"mtime":1642744670043,"results":"23","hashOfConfig":"20"},{"size":1724,"mtime":1642744670043,"results":"24","hashOfConfig":"20"},{"size":946,"mtime":1642826392025,"results":"25","hashOfConfig":"20"},{"size":4039,"mtime":1642826392025,"results":"26","hashOfConfig":"20"},{"size":4481,"mtime":1642833964867,"results":"27","hashOfConfig":"20"},{"size":1556,"mtime":1642881689543,"results":"28","hashOfConfig":"20"},{"size":891,"mtime":1642833057758,"results":"29","hashOfConfig":"20"},{"size":1043,"mtime":1642744670044,"results":"30","hashOfConfig":"20"},{"size":1077,"mtime":1642744670044,"results":"31","hashOfConfig":"20"},{"size":908,"mtime":1642744670044,"results":"32","hashOfConfig":"20"},{"size":953,"mtime":1642744670042,"results":"33","hashOfConfig":"20"},{"size":2410,"mtime":1642744670041,"results":"34","hashOfConfig":"20"},{"size":504,"mtime":1642832617225,"results":"35","hashOfConfig":"20"},{"size":3080,"mtime":1642744670042,"results":"36","hashOfConfig":"20"},{"size":2338,"mtime":1642879886343,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"acv5kx",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/Users/MT/Desktop/main/insta/client/src/index.js",[],["83","84"],"/Users/MT/Desktop/main/insta/client/src/reportWebVitals.js",[],"/Users/MT/Desktop/main/insta/client/src/App.js",[],"/Users/MT/Desktop/main/insta/client/src/pages/SingleThought.js",[],"/Users/MT/Desktop/main/insta/client/src/pages/Profile.js",[],"/Users/MT/Desktop/main/insta/client/src/pages/Home.js",["85"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\nimport Card from '../components/Card';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/MT/Desktop/main/insta/client/src/pages/Signup.js",["86"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n\n  );\n\n\n\n\n\n};\n\nexport default Signup;\n\n\n\n\n\n{/* <div>\n      {data ? (\n        <p>Success! You may now head{' '}\n          <Link to=\"/\">back to the homepage.</Link>\n        </p >\n      ) : (\n        <form className =\"ui form\" onSubmit={handleFormSubmit}>\n          <h4 className =\"ui dividing header\">Sign Up</h4>\n          <div className =\"field\">\n            <label>Username</label>\n            <input placeholder=\"First Name\" type=\"text\" className=\"form-input\"\n              placeholder=\"Your username\"\n              name=\"username\"\n              value={formState.name}\n              onChange={handleChange}></input>\n          </div>\n          <div className=\"field\">\n            <label>E-mail</label>\n            <input type=\"email\" placeholder=\"joe@schmoe.com\"\n              name=\"email\"\n              value={formState.email}\n              onChange={handleChange}></input>\n          </div>\n          <div className=\"field\">\n            <label>Password</label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            /></input>\n          </div>\n        </div >\n        <div className =\"ui teal submit button\">Submit</div>\n        </form >\n  )}\n\n{\n  error && (\n    <div className=\"my-3 p-3 bg-danger text-white\">\n      {error.message}\n    </div>\n  )\n}\n</div > */}","/Users/MT/Desktop/main/insta/client/src/pages/Login.js",["87"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport loginImg from '../images/in2.webp'\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div class=\"ui segment\">\n      <div class=\"ui two column very relaxed grid\">\n        <div class=\"column\">\n          <img src={loginImg} width=\"100%\" alt=\"influencer\"></img>\n\n        </div>\n        <div class=\"column\">\n          <div className=\"ui center aligned basic segment\">\n            <div>\n              {data ? (\n                <p>\n                  Success! You may now head{' '}\n                  <Link to=\"/\">back to the homepage.</Link>\n                </p>\n              ) : (\n                <form onSubmit={handleFormSubmit}>\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"mia@me.com\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={formState.email}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"******\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={formState.password}\n                    onChange={handleChange}\n                  />\n                  <button\n                    className=\"ui mainColor submit button\"\n                    style={{ cursor: 'pointer' }}\n                    type=\"submit\"\n                  >\n                    Login\n                  </button>\n                </form>\n              )}\n\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n            <div className=\"ui horizontal divider\">\n              Or\n            </div>\n            <Link className=\"ui subColor submit button\" to=\"/signup\">\n              Signup\n            </Link>\n          </div>\n        </div>\n      </div>\n      <div className=\"ui vertical divider\">\n        join\n      </div>\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n  );\n};\n\nexport default Login;\n\n{/* <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main> */}","/Users/MT/Desktop/main/insta/client/src/components/Header/index.js",["88"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport userimg from '../../images/millie.JPG'\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-main\" to=\"/\">\n            <h1 className=\"m-0 meet-font\">Meet ME</h1>\n          </Link>\n          <p className=\"m-0 text-light\">Share the things you love as a Brand Ambassador</p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <div className='margin'>\n              <Link className=\"text-main\" to=\"/me\" style={{ cursor: 'pointer' }}>\n                <div className=\"content\">\n                  <img className=\"ui avatar image\" src={userimg}></img>{Auth.getProfile().data.username}\n                </div>\n              </Link>\n              <p className=\"text-main\" style={{ cursor: 'pointer' }} onClick={logout}>\n                Logout\n              </p>\n            </div>\n          ) : (\n            <>\n              {/* <Link className=\"btn mainColor btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn subColor  btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link> */}\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/MT/Desktop/main/insta/client/src/components/Footer/index.js",[],"/Users/MT/Desktop/main/insta/client/src/utils/auth.js",[],"/Users/MT/Desktop/main/insta/client/src/utils/mutations.js",[],"/Users/MT/Desktop/main/insta/client/src/utils/queries.js",[],"/Users/MT/Desktop/main/insta/client/src/components/CommentList/index.js",[],"/Users/MT/Desktop/main/insta/client/src/components/CommentForm/index.js",["89"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/MT/Desktop/main/insta/client/src/components/ThoughtList/index.js",["90","91"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../Card'\n\nconst ThoughtList = ({\n  thoughts,\n  title,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  if (!thoughts.length) {\n    return\n\n    <h3>No Thoughts Yet</h3>;\n  }\n\n  return (\n    <div>\n      {showTitle && <h3>{title}</h3>}\n      {thoughts &&\n        thoughts.map((thought) => (\n          <Card thought={thought} showUsername={showUsername} />\n\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","/Users/MT/Desktop/main/insta/client/src/components/ThoughtForm/index.js",["92"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","/Users/MT/Desktop/main/insta/client/src/components/Card/index.js",["93","94"],"import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport millie from '../../images/millie.JPG'\nimport im2 from '../../images/im1.png'\n\nfunction Card({ thought, showUsername }) {\n    return (\n        <div class=\"ui grid\">\n            <div class=\"three column row\">\n                <div class=\"column\">\n                    <div className=\"ui card\" key={thought._id} >\n                        <div className=\"content\">\n                            <img className=\"ui avatar image\" src={millie}></img> Millie\n                        </div>\n                        <div className=\"image\">\n                            <img src={im2} alt=\"emily\"></img>\n                        </div>\n                        <div className=\"content\">\n                            <span className=\"right floated\">\n                                <i className=\"heart outline like icon\"></i>\n                                17 likes\n                            </span>\n                            <i className=\"comment icon\"></i>\n                            3 comments\n                        </div>\n                        <div className=\"extra content\">\n                            <div className=\"ui large transparent left icon input\">\n                                <i className=\"heart outline icon\"></i>\n                                <input type=\"text\" placeholder=\"Add Comment...\"></input>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n\n\n/* <div className=\"right floated meta\">\n                {showUsername ? (\n                    <Link\n                        className=\"text-light\"\n                        to={`/profiles/${thought.thoughtAuthor}`}\n                    >\n                        {thought.thoughtAuthor} <br />\n                        <span style={{ fontSize: '1rem' }}>\n                            had this thought on {thought.createdAt}\n                        </span>\n                    </Link>\n                ) : (\n                    <>\n                        <span style={{ fontSize: '1rem' }}>\n                            You had this thought on {thought.createdAt}\n                        </span>\n                    </>\n                )}\n            </div> */",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":112,"column":1,"nodeType":"105","messageId":"106","endLine":157,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":124,"column":1,"nodeType":"105","messageId":"106","endLine":170,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":25,"column":19,"nodeType":"109","endLine":25,"endColumn":66},{"ruleId":"99","severity":1,"message":"110","line":19,"column":15,"nodeType":"101","messageId":"102","endLine":19,"endColumn":19},{"ruleId":"99","severity":1,"message":"111","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":14,"column":5,"nodeType":"114","messageId":"115","endLine":14,"endColumn":30},{"ruleId":"99","severity":1,"message":"110","line":41,"column":15,"nodeType":"101","messageId":"102","endLine":41,"endColumn":19},{"ruleId":"99","severity":1,"message":"116","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":13,"column":29,"nodeType":"109","endLine":13,"endColumn":75},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'Link' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]